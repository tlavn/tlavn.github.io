/* Reset CSS */
:rooT{
    --primary-color: #2D399A;
    --secondary-color: #219653;
    --part-color: #E0E0E0;
    --part-content-color: #fffdfd;
    --background-color: #F2F2F2;
    --unenter-background-color: #BDBDBD;

    --text-color: #FFFFFF;
    --content-text-color:#333333;
    --unenter-text-color: #828282;
}
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html{
    font-family: 'Segoe UI', Geneva, Verdana, sans-serif, sans-serif;
    font-size: 16px;
    font-weight: 400;
    background-color: var(--background-color);
    scroll-behavior: smooth;
}
h1{
    font-size: 24px;
}
h2{
    font-size: 18px;
}
/* width */
::-webkit-scrollbar {
    width: 6px;
  }
  
  /* Track */
  ::-webkit-scrollbar-track {
    background:var(--background-color);
    border-radius: 10px;
  }
   
  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #cccccc; 
    border-radius: 10px;
  }
  
  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: var(--unenter-text-color); 
  }
/* RADIO */
    /* The container_radio */
    .container_radio {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 0px;
        cursor: pointer;
        font-size: 16px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    /* Hide the browser's default radio button */
    .container_radio input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }

    /* Create a custom radio button */
    .checkmark_radio {
        position: absolute;
        top: 0;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #eee;
        border-radius: 50%;
        border-style: solid;
        border-color:var(--unenter-text-color);
        border-width: 2px;
        box-sizing: border-box;

    }

    /* On mouse-over, add a grey background color */
    .container_radio:hover input ~ .checkmark_radio {
        background-color: #ccc;
    }

    /* When the radio button is checked, add a blue background */
    .container_radio input:checked ~ .checkmark_radio {
        background-color: transparent;
    }

    /* Create the indicator (the dot/circle - hidden when not checked) */
    .checkmark_radio:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the indicator (dot/circle) when checked */
    .container_radio input:checked ~ .checkmark_radio:after {
        display: block;
    }

    /* Style the indicator (dot/circle) */
    .container_radio .checkmark_radio:after {
        top: 3px;
        left: 3px;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background: var(--secondary-color);
        border-color: var(--secondary-color);
        border-style: solid;
        border-width: 2px;
        box-sizing: border-box;
    }
/* 
1. Từ ngoài vào trong
2. Từ trên xuống dưới
3. Từ tổng quan đến chi tiết
*/


/*  Đật các câu hỏi sau để css các thẻ
1. Vị trí
2. Kích thước (width, height
3. Màu sắc
4. Kiểu dáng (kiểu chữ, hình tròn, vuông, ...)
*/
.header{
    height: 52px;
    background-color:var(--primary-color);
    /*4 dòng sau để cố định header*/
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1;
}
.nav{
    line-height: 52px;
    display: flex;
    margin: auto;
    width: 1280px;
    color: white;
    display: flex;                  /* establish flex container */
    flex-direction: row;            /* default value; can be omitted */
    flex-wrap: nowrap;              /* default value; can be omitted */
    justify-content: space-between;
}
i {
    vertical-align:middle;
    font-size: 24px;
    line-height: 40px;
    margin: 0 auto;
  } 
  i + span{
      margin-left: 0px;
  }
  i .icon{
      padding-top: 6px;
  }
#timer{
    font-size: 24px;
    font-weight: 600;
}
.timer{
    height: 52px;
    line-height: 52px;
    display: flex;
    flex-direction: row;            /* default value; can be omitted */
    flex-wrap: nowrap;              /* default value; can be omitted */
    justify-content: space-between;
}
.btn-group{
    padding-top: 8px;
    line-height: 52px;
    display: flex;
    flex-direction: row;            /* default value; can be omitted */
    flex-wrap: nowrap;              /* default value; can be omitted */
    justify-content: space-between;
}
.btn{
    font-size: 17px;
    font-weight: 600;
    border: none;
    cursor: pointer;
    margin-left: 16px;
    height: 34px;
    line-height: 34px;
    padding: 0px 20px 2px;
    border-radius: 4px;
    background-color: var(--background-color);
    color: var(--primary-color);
    justify-content: center;
}
button{
    font-size: 16px;
    font-weight: 400;
    border: none;
    cursor: pointer;
    margin-left: 16px;
    height: 34px;
    line-height: 34px;
    padding: 2px 16px;
    border-radius: 4px;
    background-color: var(--background-color);
    color: var(--primary-color);
    justify-content: center;
}

.container{
    position: relative;
    width: 1280px;
    height: 1806px;
    display: flex;
    margin: auto;
}
.content-container{
    position: absolute;
    left:0;
    width: 972px;
    overflow-y: scroll;
}
.skill-container{
    padding: 32px;
    background-color: var(--primary-color);
    color: var(--text-color);
    border-radius: 8px;
    margin-bottom: 16px;
}
.skill-description{
    margin-top: 16px;
    text-align: justify;
}
.part-container{
    margin-top: 16px;
    border-radius: 8px;
}
.part-title{
    border-radius: 8px 8px 0 0;
    padding: 32px 32px 16px 32px;
    background-color: var(--part-color);
    color: var(--primary-color);
}
.part-description{
    color: var(--content-text-color);
    margin-top: 16px;
    text-align: justify;
    font-weight: 600;
}
.part-content{
    padding-bottom: 16px;
    background-color: var(--part-content-color);
    border-radius: 0 0 8px 8px;
    padding-left: 32px;
}
li{
    list-style: none;
}
div .question::before { 
    display: block; 
    content: " "; 
    padding-top: 28px; 
    height: 28px; 
    visibility: hidden; 
    pointer-events: none;
  }
.question{
    font-weight: 700;
    padding-top: 0px;
    margin-bottom: 16px;
    color: var(--content-text-color);
}
div .img-content::before { 
    display: block; 
    content: " "; 
    margin-top: 16px; 
    height: 16px; 
    visibility: hidden; 
    pointer-events: none;
  }
.img-content{
    display: block;
    padding-top: 16px;
    padding-bottom: 16px;
    margin-left: auto;
    margin-right: auto;
}
.img-content-center{
    padding-top: 16px;
    display: block;
    margin-left: auto;
    margin-right: auto;
}
.line{
    width: 100%;
    height: 16px;
    border-bottom: 1px solid #333333;
    position: absolute;
}

/* PALETTE */
.question-palette-container{
    width: 276px;
    position: absolute;
    right:0;
    top: 0;
    overflow: auto;
}
.question-palette-container-fixed{
    position: s;
}
.skill-palette-container{

}
.skill{
    background-color: var(--primary-color);
    border-radius: 8px 8px 0 0 ;
    color: var(--text-color);
    height: 40px;
    text-align: center;
    padding-top: 8px;
}
.palette{
    background-color: var(--part-content-color);
    border-radius: 0 0 8px 8px;
    display: grid;
    grid-gap: 4px 4px;
    grid-template-columns: auto auto auto auto auto;
    background-color: #ffffff;
    padding: 12px 32px;

}
.grid-item {
    display: flex;
    align-items: center;
    justify-content: center;
    color:var(--unenter-text-color);
    background-color: var(--unenter-background-color);
    font-size: 14px;
    width: 32px;
    height: 32px;
    text-align: center;
    border-radius:50%;
}
.grid-item-change{
    display: flex;
    align-items: center;
    justify-content: center;
    color:var(--text-color);
    background-color: var(--secondary-color);
    font-size: 14px;
    width: 32px;
    height: 32px;
    text-align: center;
    border-radius:50%;
}
a{
    text-decoration: none;
}
a:link {
    color:var(--unenter-text-color);
    background-color: transparent;
    text-decoration: none;
  }
  a:visited {
    color:var(--unenter-text-color);
    background-color: transparent;
    text-decoration: none;
  }
  a:hover {
    color: var(--unenter-text-color);
    background-color: transparent;
    text-decoration: none;
  }
  a:active {
    color: var(--unenter-text-color);
    background-color: transparent;
    text-decoration: none;
  }